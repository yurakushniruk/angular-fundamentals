{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    loginUser(userName, password) {\n      let loginInfo = {\n        username: userName,\n        password: password\n      }; //the shape of this object depends on the server, the current one expects 'username' (all lowercase)\n\n      let options = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post('/api/login', loginInfo, options).pipe(tap(data => {\n        this.currentUser = data['user'];\n      })).pipe(catchError(err => {\n        return of(false);\n      })); // this.currentUser = {\n      //     id: 1,\n      //     userName: userName,\n      //     firstName: 'John', \n      //     lastName: 'Papa'\n      // }\n    }\n\n    isAuthenticated() {\n      return !!this.currentUser;\n    }\n\n    checkAuthenticationStatus() {\n      this.http.get('/api/currentIdentity').pipe(tap(data => {\n        if (data instanceof Object) {\n          this.currentUser = data;\n        }\n      })).subscribe();\n    }\n\n    updateCurrentUser(firstName, lastName) {\n      this.currentUser.firstName = firstName;\n      this.currentUser.lastName = lastName;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}