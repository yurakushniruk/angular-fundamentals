{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction UpvoteComponent_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"color\", ctx_r0.iconColor);\n  }\n}\n\nexport let UpvoteComponent = /*#__PURE__*/(() => {\n  class UpvoteComponent {\n    constructor() {\n      this.vote = new EventEmitter();\n    }\n\n    set voted(val) {\n      this.iconColor = val ? 'red' : 'white';\n    }\n\n    onClick() {\n      this.vote.emit({});\n    }\n\n  }\n\n  UpvoteComponent.ɵfac = function UpvoteComponent_Factory(t) {\n    return new (t || UpvoteComponent)();\n  };\n\n  UpvoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpvoteComponent,\n    selectors: [[\"upvote\"]],\n    inputs: {\n      count: \"count\",\n      voted: \"voted\"\n    },\n    outputs: {\n      vote: \"vote\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"votingWidgetContainer\", \"pointable\", 3, \"click\"], [1, \"well\", \"votingWidget\"], [1, \"votingButton\"], [\"class\", \"glyphicon glyphicon-heart\", 3, \"color\", 4, \"ngIf\"], [1, \"badge\", \"badge-inverse\", \"votingCount\"], [1, \"glyphicon\", \"glyphicon-heart\"]],\n    template: function UpvoteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function UpvoteComponent_Template_div_click_0_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, UpvoteComponent_i_3_Template, 1, 2, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.voted);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.count);\n      }\n    },\n    directives: [i1.NgIf],\n    styles: [\".votingWidgetContainer[_ngcontent-%COMP%]{padding-left:24px}.votingWidget[_ngcontent-%COMP%]{height:64px;padding-top:7px;border-radius:21px}.votingButton[_ngcontent-%COMP%]{margin-left:-7px;margin-top:1px;cursor:pointer}.votingButton[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#fff}.badge-inverse[_ngcontent-%COMP%]{background-color:#fff;color:#4e5d6c}.votingCount[_ngcontent-%COMP%]{margin-left:-11px;margin-top:1px;font-weight:bold;font-size:14px}\"]\n  });\n  return UpvoteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}